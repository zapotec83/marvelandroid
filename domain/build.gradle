plugins {
    id 'kotlin-android'
    id 'com.android.library'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
}

android {
    compileSdk setup.compileSdk

    defaultConfig {
        minSdk setup.minSdk
        targetSdk setup.targetSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    namespace 'com.jorider.domain'
}

dependencies {

    implementation "com.google.dagger:hilt-android:${versions.dagger_hilt}"
    implementation "androidx.hilt:hilt-common:${versions.androidx_hilt}"

    kapt "com.google.dagger:hilt-android-compiler:${versions.dagger_hilt}"
    kapt "androidx.hilt:hilt-compiler:${versions.androidx_hilt}"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin_version}"

    // RxJava
    implementation "io.reactivex.rxjava2:rxandroid:${versions.rxandroid}"
    implementation "io.reactivex.rxjava2:rxjava:${versions.rxjava}"

    implementation "androidx.core:core-ktx:${versions.androidx_core_ktx}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.kotlinx_coroutines_android}"

    testImplementation "junit:junit:${versions.junit}"
    // Optional -- Robolectric environment
    testImplementation "androidx.test:core:${versions.androidXTestVersion}"
    // Optional -- Mockito framework
    testImplementation "org.mockito:mockito-core:${versions.mockitoVersion}"
    // Optional -- mockito-kotlin
    testImplementation "org.mockito.kotlin:mockito-kotlin:${versions.mockitoKotlinVersion}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${versions.kotlinx_coroutines_android}"
}